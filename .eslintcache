[{"C:\\dev\\movie-app\\src\\index.js":"1","C:\\dev\\movie-app\\src\\App.js":"2","C:\\dev\\movie-app\\src\\Movie.js":"3"},{"size":197,"mtime":1607926738457,"results":"4","hashOfConfig":"5"},{"size":894,"mtime":1607990615487,"results":"6","hashOfConfig":"5"},{"size":1128,"mtime":1608012082017,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"40qncs",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\dev\\movie-app\\src\\index.js",[],["17","18"],"C:\\dev\\movie-app\\src\\App.js",["19"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie'\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movie: []\n  };\n  getMovies = async() => {\n      const {data : {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({movies, isLoading:false})\n  }\n  componentDidMount(){\n      this.getMovies();\n  }\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <div>\n        {isLoading ? 'Loading' :\n          movies.map(movie => (\n          <Movie key ={movie.id}\n          id={movie.id}\n          year={movie.year}\n          title={movie.title}\n          summary={movie.summary}\n          poster={movie.medium_cover_image}\n          genres={movie.genres}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\dev\\movie-app\\src\\Movie.js",["20"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nconst Movie = ({id, year, title, summary, poster, genres}) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            \r\n            <img src={poster} alt={title} className=\"movie_poster\"/>\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres_genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default Movie;",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":17},{"ruleId":"25","severity":1,"message":"29","line":2,"column":9,"nodeType":"27","messageId":"28","endLine":2,"endColumn":13},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]